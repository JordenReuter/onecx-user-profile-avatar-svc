# DEFAULT
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.max-size=30
quarkus.datasource.jdbc.min-size=10
quarkus.hibernate-orm.jdbc.timezone=UTC
quarkus.hibernate-orm.log.sql=false

quarkus.banner.enabled=false
quarkus.hibernate-orm.database.generation=validate
quarkus.hibernate-orm.multitenant=DISCRIMINATOR

quarkus.liquibase.migrate-at-start=true
quarkus.liquibase.validate-on-migrate=true
tkit.log.json.enabled=true


# enable or disable multi-tenancy support
tkit.rs.context.tenant-id.enabled=true

# DEV
%dev.tkit.log.json.enabled=false

# TEST
%test.tkit.log.json.enabled=false
%test.onecx.workspace.token.claim.path=groups
%test.quarkus.keycloak.devservices.roles.alice=role1,role2
%test.quarkus.keycloak.devservices.roles.bob=role1,role2,role3

%test.tkit.dataimport.enabled=true
%test.tkit.dataimport.configurations.template.enabled=true

%test.onecx.workspace.template.import.tenants=tenant-100

# Enable mocking for tenant service
%test.tkit.jpa.tenant.default=tenant-100
%test.tkit.rs.context.tenant-id.mock.enabled=true
%test.tkit.rs.context.tenant-id.mock.default-tenant=tenant-100
%test.tkit.rs.context.tenant-id.mock.claim-org-id=orgId
%test.tkit.rs.context.tenant-id.mock.data.org1=tenant-100
%test.tkit.rs.context.tenant-id.mock.data.org2=tenant-200
%test.tkit.rs.context.tenant-id.mock.data.org3=tenant-300


# TEST-IT (integration tests)
quarkus.test.integration-test-profile=test

# PROD
%prod.quarkus.datasource.jdbc.url=${DB_URL:jdbc:postgresql://postgresdb:5432/onecx-user-profile-avatar?sslmode=disable}
%prod.quarkus.datasource.username=${DB_USER:onecx-user-profile-avatar}
%prod.quarkus.datasource.password=${DB_PWD:onecx-user-profile-avatar}

# PIPE CONFIG


